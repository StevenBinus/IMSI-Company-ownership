from sqlalchemy import CHAR,String,Column,Integer,Boolean,DateTime,ForeignKey
from sqlalchemy.orm import relationship
from src.configs.database import Base

class MtrCustomer(Base):
    __tablename__ = 'mtr_customer'

    is_active = Column(Boolean, nullable=False, default=True)
    company_id = Column(Integer,ForeignKey("mtr_company.company_id"), nullable=False)
    dealer_sales_representative = Column(Integer, ForeignKey("mtr_user_details.user_employee_id"), nullable=True, default="")
    customer_id = Column(Integer, autoincrement=True, primary_key=True)
    customer_code = Column(String(10), nullable=False, unique=True)
    customer_title_prefix = Column(String(20), nullable=True, default="")
    customer_name = Column(String(100), nullable=False, default="")
    customer_title_suffix = Column(String(15), nullable=True, default="")
    customer_type_id = Column(Integer,ForeignKey("mtr_customer_type.customer_type_id"))
    keyword = Column(String(50), nullable=True, default="")
    customer_gender_id = Column(Integer, ForeignKey("mtr_gender.gender_id")) 
    customer_birthday = Column(DateTime, nullable=True, default="")
    customer_birth_place = Column(String(50), nullable=True)
    customer_religion_id = Column(Integer, ForeignKey("mtr_religion.religion_id"))
    customer_marital_status_id = Column(Integer, ForeignKey("mtr_marital_status.marital_status_id"))
    customer_marriage_date = Column(DateTime, nullable=True, default="")
    customer_hobby = Column(String(256), nullable=True, default="")
    customer_mobile_phone = Column(String(30), nullable=True, default="")
    customer_mobile_phone2 = Column(String(30), nullable=True, default="")
    driver_mobile_phone = Column(String(30), nullable=True, default="")
    customer_email_address = Column(String(128), nullable=True, default="")
    customer_job_title_id = Column(Integer, ForeignKey("mtr_job_title.job_title_id"))
    id_type = Column(Integer,ForeignKey("mtr_id_type.id_type_id"))
    id_number = Column(String(50), nullable=True, default="")
    id_address_id = Column(Integer, ForeignKey("mtr_address.address_id")) 
    id_phone_no = Column(String(30), nullable=True, default="")
    home_address_id = Column(Integer, ForeignKey("mtr_address.address_id"))  
    home_phone_no = Column(String(30), nullable=True, default="")
    home_fax_no = Column(String(30), nullable=True, default="")
    office_address_id = Column(Integer, ForeignKey("mtr_address.address_id"))  
    office_phone_no = Column(String(30), nullable=True, default="")
    office_fax_no = Column(String(30), nullable=True, default="")
    reference_name = Column(String(100), nullable=True, default="")
    reference_address_id = Column(Integer, ForeignKey("mtr_address.address_id"))  
    reference_phone_number = Column(String(30), nullable=True, default="")
    reference_note = Column(String(256), nullable=True, default="")
    tax_invoice_type_id = Column(Integer, ForeignKey("mtr_tax_invoice_type.tax_invoice_type_id"),nullable=True, default=0)
    tax_registration_number = Column(String(30), nullable=True, default="")
    tax_registration_date = Column(DateTime, nullable=True, default="")
    tax_name = Column(String(100), nullable=True, default="")
    tax_address_id = Column(Integer, ForeignKey("mtr_address.address_id"))  
    pkp_number = Column(String(30), nullable=True, default="")
    pkp_type = Column(CHAR(1), nullable=True, default="")
    pkp_date = Column(DateTime, nullable=True, default="")
    vat_registration_number = Column(String(30), nullable=True, default="")
    vat_registration_date = Column(DateTime, nullable=True, default="")
    vat_name = Column(String(100), nullable=True, default="")
    vat_address_id = Column(Integer, ForeignKey("mtr_address.address_id"))  
    vat_pkp_type = Column(CHAR(1), nullable=True, default="")
    vat_pkp_date = Column(DateTime, nullable=True, default="")
    vat_pkp_number = Column(String(30), nullable=True, default="")
    vat_tax_office_id =  Column(Integer,ForeignKey("mtr_tax_office.tax_office_id"))
    bill_equal_to = Column(String(10), nullable=True, default="")
    correspondence_equal_to = Column(String(10), nullable=True, default="")
    business_type_id = Column(Integer,ForeignKey("mtr_business_type.business_type_id")) 
    business_group_id = Column(Integer,ForeignKey("mtr_business_group.business_group_id")) 
    business_website = Column(String(128), nullable=True, default="")
    dealer_name_id = Column(Integer, ForeignKey("mtr_company.company_id"))
    dealer_contact_date = Column(DateTime, nullable=True, default="")
    customer_class_id = Column(Integer, ForeignKey("mtr_customer_class.customer_class_id")) 
    customer_behavior_id = Column(Integer, ForeignKey("mtr_supplier_behaviour.supplier_behaviour_id"))
    print_state = Column(Boolean, nullable=True, default=True)
    collector_id = Column(Integer, ForeignKey("mtr_collector.collector_id"))
    term_of_payment_id = Column(Integer,ForeignKey("mtr_term_of_payment.term_of_payment_id"))
    tax_office_id = Column(Integer,ForeignKey("mtr_tax_office.tax_office_id")) 
    vat_transaction_id = Column(Integer,ForeignKey("mtr_vat_transaction_code.vat_transaction_code_id")) 
    customer_price_code = Column(Integer, ForeignKey("mtr_discount_setting.discount_setting_id")) 
    
    # back populates
    customer_type_fk = relationship("MtrCustomerType", back_populates="customer_bfk", foreign_keys=[customer_type_id])
    business_group_id_fk = relationship("MtrBusinessGroup", back_populates="customer_business_group_id_bfk", foreign_keys=[business_group_id])
    company_id_fk = relationship("MtrCompany", back_populates="customer_company_id_bfk", foreign_keys=[company_id])
    id_type_fk = relationship("MtrIDType", back_populates="customer_id_type_bfk", foreign_keys=[id_type])
    vat_taxoffice_id_fk = relationship("MtrTaxOffice", back_populates="vat_kpp_id_bfk", foreign_keys=[vat_tax_office_id])
    business_type_id_fk = relationship("MtrBusinessType", back_populates="customer_business_type_id_bfk", foreign_keys=[business_type_id])
    term_of_payment_id_fk = relationship("MtrTermOfPayment", back_populates="customer_term_of_payment_id_bfk", foreign_keys=[term_of_payment_id])
    tax_office_id_id_fk = relationship("MtrTaxOffice", back_populates="taxoffice_id_bfk", foreign_keys=[tax_office_id])
    vat_transaction_id_fk = relationship("MtrVATTransactionCode", back_populates="customer_vat_transaction_id_bfk", foreign_keys=[vat_transaction_id])
    id_address_fk = relationship("MtrAddress", back_populates="id_address_bfk", foreign_keys=[id_address_id])
    home_address_fk = relationship("MtrAddress", back_populates="home_address_bfk", foreign_keys=[home_address_id])
    office_address_fk = relationship("MtrAddress", back_populates="office_address_bfk", foreign_keys=[office_address_id])
    tax_address_fk = relationship("MtrAddress", back_populates="tax_address_bfk", foreign_keys=[tax_address_id])
    vat_address_fk = relationship("MtrAddress", back_populates="vat_address_bfk", foreign_keys=[vat_address_id])
    reference_address_fk = relationship("MtrAddress", back_populates="reference_address_bfk", foreign_keys=[reference_address_id])
    customer_class_fk = relationship("MtrCustomerClass", back_populates="customer_class_bfk", foreign_keys=[customer_class_id])
    customer_behavior_fk = relationship("MtrSupplierBehaviour", back_populates="customer_behavior_bfk", foreign_keys=[customer_behavior_id])
    customer_gender_fk = relationship("MtrGender", back_populates="customer_gender_bfk", foreign_keys=[customer_gender_id])
    customer_religion_fk = relationship("MtrReligion", back_populates="customer_religion_bfk", foreign_keys=[customer_religion_id])
    customer_marital_status_fk = relationship("MtrMaritalStatus", back_populates="customer_marital_status_bfk", foreign_keys=[customer_marital_status_id])
    customer_job_title_fk = relationship("MtrJobTitle", back_populates="customer_job_title_bfk", foreign_keys=[customer_job_title_id])
    dealer_name_fk = relationship("MtrCompany", back_populates="dealer_name_bfk", foreign_keys=[dealer_name_id])
    collector_fk = relationship("MtrCollector", back_populates="collector_bfk", foreign_keys=[collector_id])
    customer_tax = relationship("MtrTaxInvoiceType", back_populates="tax_customer", foreign_keys=[tax_invoice_type_id])
    customer_dealer_representative = relationship("MtrUserDetails", back_populates="dealer_representative_customer", foreign_keys=[dealer_sales_representative])

    customer_virtual_account_bfk = relationship("MtrCustomerVirtualAccount", back_populates="customer_virtual_account_fk", foreign_keys="MtrCustomerVirtualAccount.customer_id")
    customer_delivery_bfk = relationship("MtrCustomerDeliveryAddress", back_populates="customer_delivery_fk", foreign_keys="MtrCustomerDeliveryAddress.customer_id")
    customer_contact_bfk = relationship("MtrCustomerContact", back_populates="customer_contact_fk", foreign_keys="MtrCustomerContact.customer_id")
    customer_bank_bfk = relationship("MtrCustomerBankAccount", back_populates="customer_bank_fk", foreign_keys="MtrCustomerBankAccount.customer_id")
    customer_dealer_bfk = relationship("MtrCustomerByDealer", back_populates="customer_dealer_fk", foreign_keys="MtrCustomerByDealer.customer_id")
    customer_warranty = relationship("MtrCustomerWarranty", back_populates="warranty_customer", foreign_keys="MtrCustomerWarranty.customer_id")
    default_delivery_customer = relationship("MtrCustomerDefaultDelivery", back_populates="customer_default_delivery", foreign_keys="MtrCustomerDefaultDelivery.customer_id")


